import os
comp = ARGUMENTS.get('comp','')
prec = ARGUMENTS.get('prec','')
mpi = ARGUMENTS.get('mpi','')
openmp = ARGUMENTS.get('openmp','')


if str(comp)=='sun':
  env = Environment(tools=['link','sunf90','sunf95'])
  if str(openmp)=='no':
    omp_flag = ''
  else:
    omp_flag = ' -openmp'
  env.Append(F90FLAGS='-fpp -xpp=cpp -g -fast -fPIC')
  env.Replace(SHF90FLAGS=['$F90FLAGS','-fPIC'])
  env.Replace(SHLINKFLAGS=['$LINKFLAGS', '-G'])
  comp_dir='sun'

  env.Append(F90PATH = ['${TARGET.dir}'])
  env.Append(FORTRANMODDIRPREFIX = '-moddir=')
  env.Append(INCPREFIX = '-M')
 
elif str(comp)=='intel':
  env = Environment(tools=['default','ifort'])
  if str(openmp)=='no':
    omp_flag = ''
  else:
    omp_flag = ' -openmp'
  env.Append(F90FLAGS='-cpp -g -fast')
  comp_dir='intel'
  
  env.Append(F90PATH = ['${TARGET.dir}'])
  
else:
  env = Environment(ENV = {'PATH' : os.environ['PATH']})
  env.Append(F90FLAGS='-cpp -w -g -Wall -Ofast -fbacktrace')
  if str(openmp)=='no':
    omp_flag = ''
  else:
    omp_flag = ' -fopenmp'
  comp_dir='gcc'
  
  env.Append(F90PATH = ['${TARGET.dir}','/usr/local/include/','/usr/local/lib64'])
  env.Append(FORTRANMODDIRPREFIX = '-J')

try:
  env.Append(ENV = {'LD_LIBRARY_PATH' : os.environ['LD_LIBRARY_PATH']})
except:
  pass


try:
  fc = os.environ['FC']
  if len(fc)>0:
    env.Replace(F90 = fc)
except:
  pass

if str(mpi)=='yes':
  env.Replace(LINK = 'mpif90')
  env.Append(F90FLAGS=' -DMPI')
else:
  env.Replace(LINK = (env.Dump('F90')))

env.Append(F90FLAGS=omp_flag)
  
if str(prec)=='dp':
  prec_dir = 'dp'  
  env.Append(F90FLAGS=' -DDPREC')
else:
  prec_dir = 'sp'


env.Append(FORTRANMODDIR = '${TARGET.dir}')

objs = env.SharedObject(target='../bin/'+comp_dir+'/precisions', source='precisions.f90')
objs += env.SharedObject(target='../bin/'+comp_dir+'/parameters', source='parameters.f90')
objs += env.SharedObject(target='../bin/'+comp_dir+'/customfftw3', source='customfftw3.f90')
objs += env.SharedObject(target='../bin/'+comp_dir+'/custompfft', source='custompfft.f90')
objs += env.SharedObject(target='../bin/'+comp_dir+'/fft', source='fft.f90')
Depends(objs[-1], 'fft-inc.f90')
Depends(objs[-1], 'data_allocate.f90')
objs += env.SharedObject(target='../bin/'+comp_dir+'/poisfft', source='poisfft.f90')
Depends(objs[-1], 'poisfft-inc.f90')
Depends(objs[-1], 'loop_nest_3d.f90')
objs += env.SharedObject(target='../bin/'+comp_dir+'/main', source='main.f90')

objs = filter(lambda o: str(o)[-4:] != '.mod', objs)

sobjs = env.Object(target='../bin/'+comp_dir+'/precisions', source='precisions.f90')
sobjs += env.Object(target='../bin/'+comp_dir+'/parameters', source='parameters.f90')
sobjs += env.Object(target='../bin/'+comp_dir+'/fft', source='fft.f90')
Depends(sobjs[-1], 'fft-inc.f90')
Depends(sobjs[-1], 'data_allocate.f90')
sobjs += env.Object(target='../bin/'+comp_dir+'/poisfft', source='poisfft.f90')
Depends(sobjs[-1], 'poisfft-inc.f90')
Depends(sobjs[-1], 'loop_nest_3d.f90')
sobjs += env.Object(target='../bin/'+comp_dir+'/main', source='main.f90')

sobjs = filter(lambda o: str(o)[-4:] != '.mod', sobjs)

lib = env.SharedLibrary(target='../lib/'+comp_dir+'/libpoisfft', source = objs)
lib = lib + env.StaticLibrary(target='../lib/'+comp_dir+'/libpoisfft', source = sobjs)

if str(mpi)=='yes':
    testobj = env.StaticObject(F90FLAGS='-O3',target='../bin/'+comp_dir+'/testmpi', source='testmpi.f90')
    testobj = filter(lambda o: str(o)[-4:] != '.mod', testobj)
    
    libs = ['pfft','pfftf','fftw3_mpi','fftw3f_mpi','fftw3','fftw3f']
    if (not str(openmp)=='no'):
      libs += ['fftw3_omp']
    test = env.Program(LINKFLAGS=omp_flag, LIBS=libs,target='../bin/'+comp_dir+'/testmpi', source = sobjs + testobj)
    env.Alias('test',['../bin/'+comp_dir+'/testmpi'])
else:
    testobj = env.StaticObject(F90FLAGS='-O3',target='../bin/'+comp_dir+'/testpoisson', source='testpoisson.f90')
    testobj = filter(lambda o: str(o)[-4:] != '.mod', testobj)
    
    test = env.Program(LINKFLAGS=omp_flag, LIBS=['fftw3','fftw3f','fftw3_omp'],target='../bin/'+comp_dir+'/testpoisson', source = sobjs + testobj)
    env.Alias('test',['../bin/'+comp_dir+'/testpoisson'])

Default(lib)
